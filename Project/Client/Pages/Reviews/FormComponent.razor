@inject HttpClient _client

<EditForm Model = "@review" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Book: </label>
            <div>
                <InputSelect @bind-Value="review.BookID" class="form-control">
                    <option value="">-- Select Book --</option>
                    @if (Books != null)
                    {
                        foreach (var book in Books)
                        {
                            <option value="@book.Id">@book.Title</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => review.BookID)" />
            </div>
        </div>
        <br />

        <div class="form-group">
            <label>Review Rating: </label>
            <div>
                <InputNumber @bind-Value="@review.UserRating" class="form-control" />
                <ValidationMessage For="@(() => review.UserRating)" />
            </div>
        </div>
        <br />

        <div class="form-group">
            <label>Review Title: </label>
            <div>
                <InputText @bind-Value="@review.Title" class="form-control" />
                <ValidationMessage For="@(() => review.Title)" />
            </div>
        </div>
        <br />

        <div class="form-group">
            <label>Review Content: </label>
            <div>
                <InputText @bind-Value="@review.Content" class="form-control" />
                <ValidationMessage For="@(() => review.Content)" />
            </div>
        </div>
        <br />

        <div class="form-group">
            <label>User: </label>
            <div>
                <InputSelect @bind-Value="review.AppUserID" class="form-control">
                    <option value="">-- Select App User --</option>
                    @if (AppUsers != null)
                    {
                        foreach (var appUser in AppUsers)
                        {
                            <option value="@appUser.Id">@appUser.Username</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => review.AppUserID)" />
            </div>
        </div>
        <br />
        <br />
    </fieldset>

    @if(!Disabled){
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }

    <BackToList Target="reviews" />
</EditForm>


@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Review? review { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<AppUser>? AppUsers;
    private IList<Book>? Books;

    protected async override Task OnInitializedAsync()
    {
        AppUsers = await _client.GetFromJsonAsync<List<AppUser>>($"{Endpoints.AppUsersEndpoint}");
        Books = await _client.GetFromJsonAsync<List<Book>>($"{Endpoints.BooksEndpoint}");
    }
}
