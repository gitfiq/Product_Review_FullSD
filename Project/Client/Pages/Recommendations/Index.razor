@page "/recommendations/"
@inject HttpClient _client
@inject IJSRuntime js
@attribute [Authorize]

<h3 class="card-title">Manage Recommendations</h3>
<br />
<br />


<a href="/recommendations/create" class="btn btn-primary">
    <span class="oi oi-plus"></span>
    Add New Recommendation
</a>
<br />
<br />

@if (Recommendations == null)
{
    <div class="alert alert-info">Looding Recommendations....</div>
}
else
{
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>Decription</th>
                <th>Date</th>
                <th>Staff Rating</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var Recommendation in Recommendations)
            {
                <tr>
                    <td>@Recommendation.Description</td>
                    <td>@Recommendation.Date</td>
                    <td>@Recommendation.StaffRating</td>
                    <td>
                        <a href="/recommendations/view/@Recommendation.RecommendationId" class="btn btn-primary">
                            <span class="oi oi-recommendation"></span>
                        </a>
                        <a href="/recommendations/edit/@Recommendation.RecommendationId" class="btn btn-warning">
                            <span class="oi oi-pencil"></span>
                        </a>
                        <button class="btn btn-danger" @onclick="@(() => Delete(Recommendation.RecommendationId))">
                            <span class="oi oi-trash"></span>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Recommendation>? Recommendations;

    protected async override Task OnInitializedAsync()
    {
        Recommendations = await _client.GetFromJsonAsync<List<Recommendation>>($"{Endpoints.RecommendationsEndpoint}");
    }

    async Task Delete(int RecommendationId)
    {
        if (Recommendations != null)
        {
            var Recommendation = Recommendations.First(q => q.RecommendationId == RecommendationId);
            var confirm = await js.InvokeAsync<bool>("confirm", $"Do you want to delete {Recommendation.RecommendationId}?");
            if (confirm)
            {
                await _client.DeleteAsync($"{Endpoints.RecommendationsEndpoint}/{RecommendationId}");
                await OnInitializedAsync();
            }
        }
    }
}
