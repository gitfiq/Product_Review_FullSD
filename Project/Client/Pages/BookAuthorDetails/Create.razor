@page "/bookAuthorDetails/create/"
@using Project.Client.Static
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New BookAuthorDetail</h3>
<hr />
<br />

<EditForm Model="@bookAuthorDetail" OnValidSubmit="CreateBookAuthorDetail">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Book: </label>
            <div>
                <InputSelect @bind-Value="bookAuthorDetail.BookID" class="form-control">
                    <option value="">-- Select Book --</option>
                    @if (Books != null)
                    {
                        foreach (var book in Books)
                        {
                            <option value="@book.Id">@book.Title</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => bookAuthorDetail.BookID)" />
            </div>
        </div>
        <label>Author: </label>
            <div>
                <InputSelect @bind-Value="bookAuthorDetail.AuthorID" class="form-control">
                    <option value="">-- Select Author--</option>
                    @if (Authors != null)
                    {
                        foreach (var author in Authors)
                        {
                            <option value="@author.Id">@author.FirstName @author.FirstName</option>
                        }
                    }
                </InputSelect>
                <ValidationMessage For="@(() => bookAuthorDetail.Author)" />
            </div>
    <button type="submit" class="btn btn-success btn-block">
        Create BookAuthorDetail
    </button>

</EditForm>


@code {
    BookAuthorDetail bookAuthorDetail = new BookAuthorDetail();

    private IList<Author>? Authors;
    private IList<Book>? Books;

    protected async override Task OnInitializedAsync()
    {
        Authors = await _client.GetFromJsonAsync<List<Author>>($"{Endpoints.AuthorsEndpoint}");
        Books = await _client.GetFromJsonAsync<List<Book>>($"{Endpoints.BooksEndpoint}");
    }
    private async Task CreateBookAuthorDetail()
    {
        await _client.PostAsJsonAsync(Endpoints.BookAuthorDetailsEndpoint, bookAuthorDetail);
        _navManager.NavigateTo("/bookAuthorDetails/");
    }
}